syntax = "proto3";

package ADAM;

message Header {

  message ProfileUpdates {
    string date = 1; // Date the change was made to the profile
    string description = 2; // Text describing the profile change made
  }

  message DataLevel {
    enum Level {
      UNKNOWN = 0; // Keep as the default value in case future versions add new DataLevels that old clients can't read
      DATABASE = 1;
      METADATA = 2;
      SUMMARISED = 3;
      DATASET = 4;
      RECORDSET = 5;
      RECORD = 6;
      RECORDFIELD = 7;
    }
  }

  message Contact {
    string name = 1;
    string email = 2;
  }

  string matrixName = 1;
  string matrixVersion = 2;
  repeated string matrixReferences = 3; // e.g., publications, URLs, DOIs for the resource - there can be many
  string matrixProfileCreateDate = 4;
  repeated ProfileUpdates matrixProfileUpdates = 5;
  string resourceName = 6;
  repeated string resourceReferences = 7; // e.g., publications, URLs, DOIs for the resource - there can be many
  string resourceDescription = 8; // Description of the resource such as a dataset
  DataLevel.Level resourceDataLevel = 9;
  repeated Contact resourceContactNames = 10;
  repeated string resourceContactOrganisations = 11;
}

message Profile {

  message RestrictionsUL {
    enum Restrictions {
      UNRESTRICTED = 0;
      LIMITED = 1;
    }
  }

  message RestrictionsULF {
    enum Restrictions {
      UNRESTRICTED = 0;
      LIMITED = 1;
      UNRESTRICTED_OBLIGATORY = 2;
      LIMITED_OBLIGATORY = 3;
      FORBIDDEN = 4;
    }
  }

  message Description {
    string description = 1;
    bool obligatory = 2;
  }

  message ResearchProfile {
    enum Type {
      OTHER = 0; // Keep as default value for future version compatibility
      METHODS = 1;
      CONTROL = 2;
      POPULATION = 3;
      ANCESTRY = 4;
      BIOMEDICAL = 5;
      FUNDAMENTAL = 6;
      GENETIC = 7;
      DRUG = 8;
      DISEASE = 9;
      GENDER = 10;
      AGE = 11;
    }
  }

  message ResearchDescription {
    ResearchProfile.Type type = 1;
    string description = 2;
    RestrictionsULF.Restrictions restriction = 3;
  }

  message ClinicalProfile {
    enum Type {
      OTHER = 0; // Keep as default value for future version compatibility
      DECISION_SUPPORT = 1;
      DISEASE = 2;
    }
  }

  message ClinicalDescription {
    ClinicalProfile.Type type = 1;
    string description = 2;
    RestrictionsULF.Restrictions restriction = 3;
  }

  RestrictionsUL.Restrictions country = 1;
  repeated Description allowedCountries = 2;

  RestrictionsUL.Restrictions organisation = 3;
  repeated Description allowedOrganisations = 4;

  RestrictionsULF.Restrictions nonProfitOrganisation = 5;
  repeated Description allowedNonProfitOrganisations = 6;

  RestrictionsULF.Restrictions profitOrganisation = 7;
  repeated Description allowedProfitOrganisations = 8;

  RestrictionsUL.Restrictions person = 9;
  repeated Description allowedPersons = 10;

  RestrictionsULF.Restrictions academicProfessional = 11;
  repeated Description allowedAcademicProfessionals = 12;

  RestrictionsULF.Restrictions clinicalProfessional = 13;
  repeated Description allowedClinicalProfessionals = 14;

  RestrictionsULF.Restrictions profitProfessional = 15; // NOTE: changed from profitMotivatedProfessional to profitProfessional
  repeated Description allowedProfitProfessionals = 16; // NOTE: changed from allowedProfitmakingProfessional to allowedProfitProfessional

  RestrictionsULF.Restrictions nonProfessional = 17;
  repeated Description allowedNonProfessionals = 18;

  RestrictionsULF nonProfitPurpose = 19;
  repeated Description allowedNonProfitPurposes = 20;

  RestrictionsULF profitPurpose = 21;
  repeated Description allowedProfitPurposes = 22;

  // RESEARCH
  RestrictionsULF.Restrictions researchPurpose = 23;
  repeated Description allowedResearchPurposes = 24;
  repeated ResearchDescription allowedResearchProfiles = 25;

  // CLINICAL
  RestrictionsULF.Restrictions clinicalPurpose = 26;
  repeated Description allowedClinicalPurpose = 27;
  repeated ClinicalDescription allowedClinicalProfiles = 28;
}

message Terms {
  bool noAuthorizationTerms = 1;
  repeated string whichAuthorizationTerms = 2;

  bool noPublicationTerms = 3;
  repeated string whichPublicationTerms = 4;

  bool noTimelineTerms = 5;
  repeated string whichTimelineTerms = 6;

  bool noSecurityTerms = 7;
  repeated string whichSecurityTerms = 8;

  bool noExpungingTerms = 9;
  repeated string whichExpungingTerms = 10;

  bool noLinkingTerms = 11;
  repeated string whichLinkingTerms = 12;

  bool noRecontactTerms = 13;
  repeated string allowedRecontactTerms = 14;
  repeated string compulsoryRecontactTerms = 15;

  bool noIPClaimTerms = 16;
  repeated string whichIPClaimTerms = 17;

  bool noReportingTerms = 18;
  repeated string whichReportingTerms = 19;

  bool noCollaborationTerms = 20;
  repeated string whichCollaborationTerms = 21;

  bool noPaymentTerms = 22;
  repeated string whichPaymentTerms = 23;
}

message MetaConditions {

  message SharingMode {
    enum Mode {
      UNKNOWN = 0; // Keep as default value for future version compatibility
      DISCOVERY = 1;
      ACCESS = 2;
      DISCOVERY_AND_ACCESS = 3;
    }
  }

  enum MultipleObligationsRule {
    MEET_ALL_OBLIGATIONS = 0;
    MEET_AT_LEAST_ONE_OBLIGATION = 1;
  }

  SharingMode sharingMode = 1;
  MultipleObligationsRule multipleObligationsRule = 2; // Intepretation rule if multiple obligatory profiles are specified
  bool noOtherConditions = 3; // There are no other use restrictions/limitations in force which are not herein specified
  repeated string whichOtherConditions = 4; // Other permissions/limitations may apply as specified
  bool sensitivePopulations = 5; // No special evaluation required for access requests involving sensitive/restricted populations
  bool uniformConsent = 6; // Identical consent permissions have been provided by all subjects
}
